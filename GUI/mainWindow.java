/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * mainWindow.java
 *
 * Created on Apr 30, 2010, 11:08:14 AM
 */

package GUI;

import java.io.File;
import java.io.IOException;
import java.net.ServerSocket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author altair
 */
public class mainWindow extends javax.swing.JFrame {

    private File ficheiro;
    private static mainWindow main;
    private ServerSocket server = null;

    //0 ainda nao se aceitou, 1 aceitou, -1 nao quero
    public static int accept = 0;
    public static boolean pauseSend = false;
    private boolean recebiFicheiro = false;
    public static boolean end = false;

    /** Creates new form mainWindow */
    public mainWindow() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

            initComponents();

            setLocation(300, 300);

            this.setSize(440, mensagem.getLocation().y+50);
            mensagem.setText("Welcome to Swift File Sender!");

            try {
                this.setIconImage(ImageIO.read(this.getClass().getResource("icon.png")));
            } catch (IOException ex) {
                Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        receiveFile = new javax.swing.JToggleButton();
        about = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ip = new javax.swing.JTextField();
        file = new javax.swing.JTextField();
        findFile = new javax.swing.JButton();
        mensagem = new javax.swing.JLabel();
        progress = new javax.swing.JProgressBar();
        stop = new javax.swing.JButton();
        pause = new javax.swing.JToggleButton();
        send = new javax.swing.JButton();
        icon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Swift File Sender");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        receiveFile.setText("Receive File");
        receiveFile.setFocusable(false);
        receiveFile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        receiveFile.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        receiveFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                receiveFileMouseClicked(evt);
            }
        });
        jToolBar1.add(receiveFile);

        about.setText("About");
        about.setFocusable(false);
        about.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        about.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        about.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutMouseClicked(evt);
            }
        });
        jToolBar1.add(about);

        jLabel1.setText("User IP:");

        jLabel2.setText("File:");

        findFile.setText("Find...");
        findFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                findFileMouseClicked(evt);
            }
        });

        mensagem.setText("jLabel3");

        stop.setText("Stop");
        stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopMouseClicked(evt);
            }
        });

        pause.setText("Pause");
        pause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pauseMouseClicked(evt);
            }
        });

        send.setText("Send");
        send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendMouseClicked(evt);
            }
        });

        icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/iconSmall.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(mensagem))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(icon)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(pause, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stop, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(progress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ip, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(send, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(file, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(findFile, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(file, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(findFile)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(mensagem))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(send))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pause)
                            .addComponent(stop)))
                    .addComponent(icon, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void findFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findFileMouseClicked
        if(findFile.isEnabled()) {
            JFileChooser fc = new JFileChooser();
            int returnVal = fc.showOpenDialog(this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                ficheiro = fc.getSelectedFile();
                file.setText(ficheiro.getAbsolutePath());
            }
        }
    }//GEN-LAST:event_findFileMouseClicked

    private void sendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendMouseClicked
        if(send.isEnabled()) {
            if(ip.getText() == null || ip.getText().equals("")) {
                mensagem.setText("Error: No host indicated!");
            }
            else if(file.getText().equals("") || file.getText() == null) {
                mensagem.setText("Error: No file indicated!");
            }
            else {
                new Connections.sendFile(ip.getText(), ficheiro).start();
                mainWindow.stop.setText("Stop");
                receiveFile.setEnabled(false);
                recebiFicheiro = false;
            }
        }
    }//GEN-LAST:event_sendMouseClicked

    private void criarServer() {
        try {
            server = new ServerSocket(7669);
            new Connections.receiveFile(server).start();
        } catch (IOException ex) {
            mensagem.setText("Cannot receive file this time: " + ex.getMessage());
            setInitial();
        }
    }


    private void receiveFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_receiveFileMouseClicked
        if (receiveFile.isEnabled()) {
            if (receiveFile.isSelected()) {
                stop.setText("Cancel");
                pause.setEnabled(false);

                showAll();

                ip.setEditable(false);
                file.setEditable(false);
                send.setEnabled(false);
                findFile.setEnabled(false);
                mensagem.setText("Waiting for file...");

                accept = 0;

                recebiFicheiro = true;
                criarServer();
            } else {
                try {
                    if (server != null) {
                        server.close();
                        server = null;
                    }
                } catch (IOException ex) {
                    Logger.getLogger(mainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                setInitial();
            }
        }
    }//GEN-LAST:event_receiveFileMouseClicked

    private void stopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopMouseClicked
        if(stop.getText().equals("Cancel")) {
            setInitial();
            receiveFile.setSelected(false);
        }
        else if(stop.getText().equals("No")) {
            accept = -1;
            ip.setText("");
            file.setText("");
            progress.setValue(0);
            mensagem.setText("Waiting for file...");
        }
        else if(stop.getText().equals("Clear")) {
            ip.setText("");
            file.setText("");

            if(!recebiFicheiro) {
                setInitial();
            }
            else {
                criarServer();
                mensagem.setText("Waiting for file...");
            }

            pauseSend = false;
            receiveFile.setEnabled(true);
            progress.setValue(0);

        }
        else {
            accept = 0;
            
        }
    }//GEN-LAST:event_stopMouseClicked

    private void pauseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseMouseClicked
        if(pause.getText().equals("Yes")) {
            accept = 1;
        }
        else {
            accept = 0;
            pauseSend = true;
        }
    }//GEN-LAST:event_pauseMouseClicked

    private void aboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutMouseClicked
        new about().setVisible(true);
    }//GEN-LAST:event_aboutMouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                main = new mainWindow();
                main.setVisible(true);
            }
        });
    }

    public static void showAll() {
        main.setSize(440, stop.getLocation().y+(int)stop.getBounds().getHeight()+(int)progress.getBounds().getHeight()+15);
    }

    public static void disableFields() {
        ip.setEditable(false);
        file.setEditable(false);
        send.setEnabled(false);
        findFile.setEnabled(false);
    }

    private void setInitial() {
        this.setSize(440, mensagem.getLocation().y + 50);
        mensagem.setText("Welcome to Swift File Sender!");
        pauseSend = false;

        ip.setEditable(true);
        file.setEditable(true);
        send.setEnabled(true);
        findFile.setEnabled(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton about;
    private static javax.swing.JTextField file;
    private static javax.swing.JButton findFile;
    private javax.swing.JLabel icon;
    private static javax.swing.JTextField ip;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JToolBar jToolBar1;
    public static javax.swing.JLabel mensagem;
    public static javax.swing.JToggleButton pause;
    public static javax.swing.JProgressBar progress;
    public static javax.swing.JToggleButton receiveFile;
    private static javax.swing.JButton send;
    public static javax.swing.JButton stop;
    // End of variables declaration//GEN-END:variables

}
